@model ABCIntegration.Parcel

@{
    ViewBag.Title = "EditParcel";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit Parcel</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Parcel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.parcel_id)

        <div class="form-group">
            @Html.LabelFor(model => model.type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.type, new { htmlAttributes = new { @class = "form-control" } })*@
                <select id="type" name="type">
                    <option value="">--Select--</option>
                    <option value="Letter">Letter</option>
                    <option value="Parcel">Parcel</option>
                    <option value="Cargo">Cargo</option>
                </select>
                @Html.ValidationMessageFor(model => model.type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.weight, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.weight, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.weight, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Height, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Height, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Height, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.width, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.width, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.width, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.branch_code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.branch_code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.branch_code, "", new { @class = "text-danger" })*@
                @Html.DropDownListFor(model => model.branch_code, (IEnumerable<SelectListItem>)ViewBag.Branch_List)
                
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.shipping_addy_line1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.shipping_addy_line1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.shipping_addy_line1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.shipping_addy_line2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.shipping_addy_line2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.shipping_addy_line2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.shipping_city, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.shipping_city, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.shipping_city, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.shipping_county, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.shipping_county, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.shipping_county, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.shipping_country, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.shipping_country, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.shipping_country, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.shipping_postcode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.shipping_postcode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.shipping_postcode, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.tracking_id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.tracking_id, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.tracking_id, "", new { @class = "text-danger" })
            </div>
        </div>*@

    @*<div class="form-group">
        @Html.LabelFor(model => model.shipping_mode, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select id="shipping_mode" name="shipping_mode">
                <option value="">--Select--</option>
                <option value="Express">Express</option>
                <option value="First Class">First Class</option>
                <option value="Second Class">Second Class</option>
            </select>
            @Html.ValidationMessageFor(model => model.shipping_mode, "", new { @class = "text-danger" })

        </div>
    </div>*@
        <div class="form-group">
            @Html.LabelFor(model => model.shipping_mode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (Model.shipping_mode == "Second Class")
                {
                    @Html.RadioButtonFor(model => model.shipping_mode, "Second Class", new { id = "Second Class", @checked = "checked" })<span>Second Class</span> <br />
                    @Html.RadioButtonFor(model => model.shipping_mode, "Fisrt Class", new { id = "Fisrt Class" }) <span>Fisrt Class</span>
                }
                else
                {
                    @Html.RadioButtonFor(model => model.shipping_mode, "Second Class", new { id = "Second Class" })<span>Second Class</span> <br />
                    @Html.RadioButtonFor(model => model.shipping_mode, "Fisrt Class", new { id = "Fisrt Class", @checked = "checked" }) <span>Fisrt Class</span>
                }

            </div>
        </div>
            @*<div class="form-group">
                @Html.LabelFor(model => model.date_create, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.date_create, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.date_create, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.creator_id, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.creator_id, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.creator_id, "", new { @class = "text-danger" })
                </div>
            </div>*@

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Update Changes" class="btn btn-default" />
                </div>
            </div>
        </div>
}

<div>
    @Html.ActionLink("Back to List", "../Home/DisplayParcels")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
